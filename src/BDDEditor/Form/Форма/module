
Процедура КоманднаяПанель1Создать(Кнопка)
	ЗаполнитьПервоначально();
	
	Развернуть();
КонецПроцедуры

Процедура ЗаполнитьПервоначально()
	Очистить();   
	
	//*
	Корень = ДобавитьВетвь(Конструктор);
	ЗаполнитьВетвь(Корень, "Функционал", "Распределение поступающей оплаты по документам реализации и зачёт аванса контрагента");

	//*
	Как = ДобавитьВетвь(Корень);
	ЗаполнитьВетвь(Как, "Как", "Бухгалтер");

	//*
	ЯХочу = ДобавитьВетвь(Корень);
	ЗаполнитьВетвь(ЯХочу, "Я хочу", "чтобы при фиксации оплаты от Контрагента происходило распределение поступившей суммы по документам реализации товаров и услуг, по которым существуют задолженности");

	//*
	ЯХочу_И = ДобавитьВетвь(ЯХочу);
	ЗаполнитьВетвь(ЯХочу_И, "И", "происходила фиксация оплаты в виде аванса, если долг отсутствует");

	//*
	Чтобы = ДобавитьВетвь(Корень);
	ЗаполнитьВетвь(Чтобы, "Чтобы", "вести учет предоплат");
	
	//*
	Контекст = ДобавитьВетвь(Конструктор);
	ЗаполнитьВетвь(Контекст, "Контекст", "");
КонецПроцедуры

Процедура Очистить()
	Конструктор.Строки.Очистить();
КонецПроцедуры

Функция ДобавитьВетвь(Ветвь)
	Возврат Ветвь.Строки.Добавить();
КонецФункции

Процедура ЗаполнитьВетвь(Ветвь, Оператор, Текст)
	Ветвь.Оператор = Оператор;
	Ветвь.Текст = Текст;
КонецПроцедуры

Процедура КоманднаяПанель1Открыть(Кнопка)
	ВызватьИсключение "Не реализовано";
КонецПроцедуры

Процедура КоманднаяПанель1Закрыть(Кнопка)
	Закрыть();
КонецПроцедуры

Процедура Развернуть()
	Для Каждого Строка Из Конструктор.Строки Цикл
		ЭлементыФормы.Конструктор.Развернуть(Строка, Истина);
	КонецЦикла;
КонецПроцедуры

Процедура КонструкторТекстНачалоВыбора(Элемент, СтандартнаяОбработка)
	ПолучитьФорму("РедакторТекста", ЭтаФорма).Открыть();
КонецПроцедуры
