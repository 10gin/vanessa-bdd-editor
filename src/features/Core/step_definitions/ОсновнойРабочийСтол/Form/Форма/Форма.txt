//начало текста модуля
&НаКлиенте
Перем юТест;

&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить("Снипет",Снипет);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);
	Структура.Вставить("Транзакция",Транзакция);
	Структура.Вставить("Параметр",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	юТест = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,"ВнешняяОбработка1СBDDEditor()","ВнешняяОбработка1СBDDEditor","внешняя обработка 1С BDDEditor");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрываюФормуВнешнейОбработкиBDDEditor()","ЯОткрываюФормуВнешнейОбработкиBDDEditor","я открываю форму внешней обработки BDDEditor");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОткрываетсяФормаВнешнейОбработкиBDDEditor()","ОткрываетсяФормаВнешнейОбработкиBDDEditor","открывается форма внешней обработки BDDEditor");
	ДобавитьШагВМассивТестов(ВсеТесты,"УУправляемойФормыОбработкиЕстьЧетыреЗакладки()","УУправляемойФормыОбработкиЕстьЧетыреЗакладки","у управляемой формы обработки есть четыре закладки");
	ДобавитьШагВМассивТестов(ВсеТесты,"ПерваяЗакладкаНазывается(Парам01)","ПерваяЗакладкаНазывается","первая закладка называется ""Структура требований""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ВтораяЗакладкаНазывается(Парам01)","ВтораяЗакладкаНазывается","вторая закладка называется ""Объем проекта""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ТретьяЗакладкаНазывается(Парам01)","ТретьяЗакладкаНазывается","третья закладка называется ""Качественные показатели""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЧетвертаяЗакладкаНазывается(Парам01)","ЧетвертаяЗакладкаНазывается","четвертая закладка называется ""Параметры""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрываюФормуВнешнейОбработкиBDDEditor()","ЯЗакрываюФормуВнешнейОбработкиBDDEditor","я закрываю форму внешней обработки BDDEditor");
	ДобавитьШагВМассивТестов(ВсеТесты,"ФормаВнешнейОбработкиBDDEditorЗакрылась()","ФормаВнешнейОбработкиBDDEditorЗакрылась","форма внешней обработки BDDEditor закрылась");

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
//у управляемой формы обработки есть четыре закладки
//@УУправляемойФормыОбработкиЕстьЧетыреЗакладки()
Процедура УУправляемойФормыОбработкиЕстьЧетыреЗакладки() Экспорт
	//Контекст.ФормаОбработки
	//юТест.ПосмотретьЗначение(Контекст,Истина);
	Если Контекст.ФормаОбработки.ПодчиненныеЭлементы.ГруппаПараметров.ПодчиненныеЭлементы.Количество()<>4 Тогда		
		ВызватьИсключение "Количество страниц не равно 4.";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
//первая закладка называется "Структура требований"
//@ПерваяЗакладкаНазывается(Парам01)
Процедура ПерваяЗакладкаНазывается(НаименованиеСтраницы) Экспорт
	//юТест.ПосмотретьЗначение(Контекст,Истина);
	Если СокрЛП(Контекст.ФормаОбработки.ПодчиненныеЭлементы.ГруппаПараметров.ПодчиненныеЭлементы.Получить(0).Заголовок)<>НаименованиеСтраницы Тогда
		ВызватьИсключение "Наименование первой страницы не совпадает.";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
//вторая закладка называется "Объем проекта"
//@ВтораяЗакладкаНазывается(Парам01)
Процедура ВтораяЗакладкаНазывается(НаименованиеСтраницы) Экспорт
	Если СокрЛП(Контекст.ФормаОбработки.ПодчиненныеЭлементы.ГруппаПараметров.ПодчиненныеЭлементы.Получить(1).Заголовок)<>НаименованиеСтраницы Тогда
		ВызватьИсключение "Наименование второй страницы не совпадает.";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
//третья закладка называется "Качественные показатели"
//@ТретьяЗакладкаНазывается(Парам01)
Процедура ТретьяЗакладкаНазывается(НаименованиеСтраницы) Экспорт
	Если СокрЛП(Контекст.ФормаОбработки.ПодчиненныеЭлементы.ГруппаПараметров.ПодчиненныеЭлементы.Получить(2).Заголовок)<>НаименованиеСтраницы Тогда
		ВызватьИсключение "Наименование третьей страницы не совпадает.";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
//четвертая закладка называется "Параметры"
//@ЧетвертаяЗакладкаНазывается(Парам01)
Процедура ЧетвертаяЗакладкаНазывается(НаименованиеСтраницы) Экспорт
	Если СокрЛП(Контекст.ФормаОбработки.ПодчиненныеЭлементы.ГруппаПараметров.ПодчиненныеЭлементы.Получить(3).Заголовок)<>НаименованиеСтраницы Тогда
		ВызватьИсключение "Наименование четвертой страницы не совпадает.";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
//я открываю форму внешней обработки BDDEditor
//@ЯОткрываюФормуВнешнейОбработкиBDDEditor()
Процедура ЯОткрываюФормуВнешнейОбработкиBDDEditor() Экспорт
	ИмяОбработки = юТест.ПодключитьВнешнююОбработкуКлиент("C:\rep\vanessa-bdd-editor\BDDEditor.epf");
	ФормаОбработки = ПолучитьФорму("ВнешняяОбработка." + ИмяОбработки + ".Форма.ФормаУправляемая",,,Истина);
	юТест.ПроверитьНеРавенство(ФормаОбработки.Открыта(),Истина,"Форма обработки должна быть закрыта.");
	
	ФормаОбработки.Открыть();
	
	юТест.ПроверитьРавенство(ФормаОбработки.Открыта(),Истина,"Форма обработки должна открыться.");
	
	Контекст.Вставить("ФормаОбработки",ФормаОбработки);
КонецПроцедуры

&НаКлиенте
//открывается форма внешней обработки BDDEditor
//@ОткрываетсяФормаВнешнейОбработкиBDDEditor()
Процедура ОткрываетсяФормаВнешнейОбработкиBDDEditor() Экспорт
	
	юТест.ПроверитьРавенство(Контекст.ФормаОбработки.Открыта(),Истина,"Форма открыта.");
КонецПроцедуры


&НаКлиенте
//внешняя обработка 1С BDDEditor
//@ВнешняяОбработка1СBDDEditor()
Процедура ВнешняяОбработка1СBDDEditor() Экспорт
	Файл = Новый Файл("C:\rep\vanessa-bdd-editor\BDDEditor.epf");
	Если НЕ Файл.Существует() Тогда
		ВызватьИсключение "Файл BDDEditor не найден.";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
//я закрываю форму внешней обработки BDDEditor
//@ЯЗакрываюФормуВнешнейОбработкиBDDEditor()
Процедура ЯЗакрываюФормуВнешнейОбработкиBDDEditor() Экспорт
	ФормаОбработки = Контекст.ФормаОбработки;
	ФормаОбработки.Закрыть();
	
	юТест.ПроверитьРавенство(ФормаОбработки.Открыта(),Ложь,"Форма обработки должна закрыться.");

КонецПроцедуры

&НаКлиенте
//форма внешней обработки BDDEditor закрылась
//@ФормаВнешнейОбработкиBDDEditorЗакрылась()
Процедура ФормаВнешнейОбработкиBDDEditorЗакрылась() Экспорт
	юТест.ПроверитьРавенство(Контекст.ФормаОбработки.Открыта(),Ложь,"Форма закрылась.");
КонецПроцедуры

