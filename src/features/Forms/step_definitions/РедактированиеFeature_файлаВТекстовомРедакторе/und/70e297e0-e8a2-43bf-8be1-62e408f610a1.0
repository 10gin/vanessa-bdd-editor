{3,
{38,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},0,"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",0,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,""ОткрытаяОбработкаBDD_EditorВФормеFeature_файла(Парам01,Парам02)"",""ОткрытаяОбработкаBDD_EditorВФормеFeature_файла"",""Дано открытая обработка BDD-Editor в форме """"ФормаРедактора"""" feature-файла """"D:\Rep\Hissin\Features\Drafts\СозданиеФича_файлаПоКнопке.feature"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯНахожусьНаЗакладке(Парам01)"",""ЯНахожусьНаЗакладке"",""И я нахожусь на закладке """"РедакторТекста"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯПерехожуКПоследнейСтрокеТекста()"",""ЯПерехожуКПоследнейСтрокеТекста"",""И Я перехожу к последней строке текста"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВвожуТекст(Парам01)"",""ВвожуТекст"",""И Ввожу текст """"Проверка переноса между закладками"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ПерехожуНаЗакладку(Парам01)"",""ПерехожуНаЗакладку"",""И Перехожу на закладку """"РедакторХТМЛ"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ТекстВПолеРавенТекстуВПоле(Парам01,Парам02)"",""ТекстВПолеРавенТекстуВПоле"",""Тогда Текст в поле """"Текст ХТМЛ"""" равен тексту в поле """"ТекстФичи"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""НажимаюСочетаниеКлавишСКодомСимвола(Парам01)"",""НажимаюСочетаниеКлавишСКодомСимвола"",""И Нажимаю сочетание клавиш с кодом символа """"00107"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВыбираюЗначение(Парам01)"",""ВыбираюЗначение"",""И Выбираю значение """"Справочники.Справочник1"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВТекстПодставляетсяЗначение(Парам01)"",""ВТекстПодставляетсяЗначение"",""Тогда в текст подставляется значение """"```Справочники.Справочник1```"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯПерехожуКТекстуFeatureФайлаВПоле(Парам01)"",""ЯПерехожуКТекстуFeatureФайлаВПоле"",""Когда Я перехожу к тексту feature файла в поле """"ТекстФичи"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВТекстПодставляетсяЗначениеИзШаблона(Парам01)"",""ВТекстПодставляетсяЗначениеИзШаблона"",""Тогда в текст подставляется значение из шаблона """"Сценарий:"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВТекстПодставляетсяСлово(Парам01)"",""ВТекстПодставляетсяСлово"",""Тогда в текст подставляется слово """"системный"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯОчищаюТекстFeatureФайлаВПоле(Парам01)"",""ЯОчищаюТекстFeatureФайлаВПоле"",""И Я очищаю текст feature файла в поле """"ТекстФичи"""""");

	Возврат ВсеТесты;
КонецФункции
	             
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////
#Область Служебные
&НаСервере
Функция ПолучитьЗначениеКонстанты(ИмяКонстанты) Экспорт
	ЗначениеКонстанты = Константы[ИмяКонстанты].Получить();
	Возврат ЗначениеКонстанты;
КонецФункции	

#КонецОбласти


&НаКлиенте
//Дано открытая обработка BDD-Editor в форме ""ФормаРедактора"" feature-файла ""D:\Rep\Hissin\Features\Drafts\СозданиеФича_файлаПоКнопке.feature""
//@ОткрытаяОбработкаBDD_EditorВФормеFeature_файла(Парам01,Парам02)
Процедура ОткрытаяОбработкаBDD_EditorВФормеFeature_файла(Парам01,Парам02) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ИмяОбработки = Ванесса.ПодключитьВнешнююОбработкуКлиент(ПолучитьЗначениеКонстанты(""ПутьКBDDEditor""));
	ФормаОбработки = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.ФормаУправляемая"",,,Истина);
	Ванесса.ПроверитьНеРавенство(ФормаОбработки.Открыта(),Истина,""Форма обработки должна быть закрыта."");
	
	ФормаОбработки.Открыть();
	
	Ванесса.ПроверитьРавенство(ФормаОбработки.Открыта(),Истина,""Форма обработки должна открыться."");
	
	КонтекстСохраняемый.Вставить(""ФормаОбработки"",ФормаОбработки);
	
	ФормаОбработки.Элементы.ГруппаОбщая.ТекущаяСтраница=ФормаОбработки.Элементы.СборТребований;
	ФормаОбработки.Объект.СтруктураДляЗагрузки=""D:\Rep\Hissin\Features"";
	ФормаОбработки.ЗаполнитьТЗСбораТребованийИзПапкиТемп(Истина);
	ПутьКФиче=ФормаОбработки.ТЗСбораТребований[0].ФичаФайл;
	ФормаОбработки.ОткрытиеФичаФайлаИзТЗСбораТребований(ПутьКФиче);
	
	ФормаРедактора = ПолучитьФорму(""ВнешняяОбработка.""+ИмяОбработки+"".Форма.ФормаРедактора"",,ФормаОбработки);
	СписокОткрытыхОкон=ПолучитьОкна();
	Если ФормаРедактора.Открыта() Тогда
		КонтекстСохраняемый.Вставить(""ФормаРедактора"",ФормаРедактора);
	Иначе
		ВызватьИсключение ""Окно редактора feature-файла не открылось""
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//И я нахожусь на закладке ""РедакторТекста""
//@ЯНахожусьНаЗакладке(Парам01)
Процедура ЯНахожусьНаЗакладке(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение ""Не реализовано."";
	ФормаРедактора=КонтекстСохраняемый.ФормаРедактора;
	ФормаРедактора.ПредыдущаяСтраницаРедактора=ФормаРедактора.Элементы.ГруппаРедактирования.ТекущаяСтраница.Имя;
	ФормаРедактора.Элементы.ГруппаРедактирования.ТекущаяСтраница=ФормаРедактора.Элементы.РедакторТекста;
//	ФормаРедактора.Активизировать();
	КонтекстСохраняемый.Вставить(""ФормаРедактора"",ФормаРедактора);
КонецПроцедуры

&НаКлиенте
//Когда Я перехожу к тексту feature файла в поле ""ТекстФичи""
//@ЯПерехожуКТекстуFeatureФайлаВПоле(Парам01)
Процедура ЯПерехожуКТекстуFeatureФайлаВПоле(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ФормаРедактора=КонтекстСохраняемый.ФормаРедактора;
	ФормаРедактора.ПредыдущаяСтраницаРедактора=ФормаРедактора.Элементы.ГруппаРедактирования.ТекущаяСтраница.Имя;
	ФормаРедактора.АктуализироватьТекстНаСтраницах(ФормаРедактора.ПредыдущаяСтраницаРедактора);
	ФормаРедактора.Элементы.ГруппаРедактирования.ТекущаяСтраница=ФормаРедактора.Элементы.РедакторТекста;
//	ФормаРедактора.Активизировать();
	//ФормаРедактора.ТекущийЭлемент = ФормаРедактора.Элементы[Парам01];
	//ФормаРедактора.Активизировать();
	//ФормаРедактора.Элементы.ГруппаРедактирования.ТекущаяСтраница=ФормаРедактора.Элементы.РедакторТекста;
	КонтекстСохраняемый.Вставить(""ФормаРедактора"",ФормаРедактора);
КонецПроцедуры

&НаКлиенте
//И Я перехожу к последней строке текста
//@ЯПерехожуКПоследнейСтрокеТекста()
Процедура ЯОчищаюТекстFeatureФайлаВПоле(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение ""Не реализовано."";
	ФормаРедактора=КонтекстСохраняемый.ФормаРедактора;
	ФормаРедактора.ТекстФичи.УстановитьТекст("""");	
КонецПроцедуры

&НаКлиенте
//И Я перехожу к последней строке текста
//@ЯПерехожуКПоследнейСтрокеТекста()
Процедура ЯПерехожуКПоследнейСтрокеТекста() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение ""Не реализовано."";
	//ФормаРедактора=КонтекстСохраняемый.ФормаРедактора;
	
КонецПроцедуры

&НаКлиенте
//И Ввожу текст ""Проверка переноса между закладками""
//@ВвожуТекст(Парам01)
Процедура ВвожуТекст(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ФормаРедактора=КонтекстСохраняемый.ФормаРедактора;
	ФормаРедактора.ТекстФичи.ВставитьСтроку(1,Парам01);
	ФормаРедактора.Активизировать();
	//ФормаРедактора.ТекущийЭлемент = ФормаРедактора.Элементы.ТекстХТМЛ; 
	//ФормаРедактора.Активизировать();
	//ФормаРедактора.ТекущийЭлемент = ФормаРедактора.Элементы.ТекстФичи;
	//ФормаРедактора.Активизировать();
	//
КонецПроцедуры

&НаКлиенте
//И Перехожу на закладку ""РедакторХТМЛ""
//@ПерехожуНаЗакладку(Парам01)
Процедура ПерехожуНаЗакладку(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ФормаРедактора=КонтекстСохраняемый.ФормаРедактора;
	ФормаРедактора.ПредыдущаяСтраницаРедактора=ФормаРедактора.Элементы.ГруппаРедактирования.ТекущаяСтраница.Имя;
	ФормаРедактора.АктуализироватьТекстНаСтраницах(ФормаРедактора.ПредыдущаяСтраницаРедактора);
	ФормаРедактора.Элементы.ГруппаРедактирования.ТекущаяСтраница=ФормаРедактора.Элементы[Парам01];

	ФормаРедактора.Активизировать();
	КонтекстСохраняемый.Вставить(""ФормаРедактора"",ФормаРедактора);
КонецПроцедуры

&НаКлиенте
//Тогда Текст в поле ""Текст ХТМЛ"" равен тексту в поле ""ТекстФичи""
//@ТекстВПолеРавенТекстуВПоле(Парам01,Парам02)
Процедура ТекстВПолеРавенТекстуВПоле(Парам01,Парам02) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ФормаРедактора=КонтекстСохраняемый.ФормаРедактора;
	Если ФормаРедактора.ТекстХТМЛ.ПолучитьТекст()<> ФормаРедактора.ТекстФичи.ПолучитьТекст() Тогда
		ВызватьИсключение ""Текст ХТМЛ не равен тексту фичи"";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
//И Нажимаю сочетание клавиш с кодом символа ""00107""
//@НажимаюСочетаниеКлавишСКодомСимвола(Парам01)
Процедура НажимаюСочетаниеКлавишСКодомСимвола(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ФормаРедактора=КонтекстСохраняемый.ФормаРедактора;
	ФормаРедактора.ВнешнееСобытие("""", """", Парам01);
	//ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И Выбираю значение ""Справочники.Справочник1""
//@ВыбираюЗначение(Парам01)
Процедура ВыбираюЗначение(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда в текст подставляется значение ""```Справочники.Справочник1```""
//@ВТекстПодставляетсяЗначение(Парам01)
Процедура ВТекстПодставляетсяЗначение(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда в текст подставляется значение из шаблона ""Сценарий:""
//@ВТекстПодставляетсяЗначениеИзШаблона(Парам01)
Процедура ВТекстПодставляетсяЗначениеИзШаблона(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда в текст подставляется слово ""системный""
//@ВТекстПодставляетсяСлово(Парам01)
Процедура ВТекстПодставляетсяСлово(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

//окончание текста модуля

",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}