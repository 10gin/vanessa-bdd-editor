{3,
{38,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},0,"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",0,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,""ВСистемеУстановленаКоманднаяСтрокаРаботыСGit()"",""ВСистемеУстановленаКоманднаяСтрокаРаботыСGit"",""Дано в системе установлена командная строка работы с git"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетКаталогFeaturesПроектаBdd_editor()"",""СуществуетКаталогFeaturesПроектаBdd_editor"",""и существует каталог features проекта bdd-editor"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СуществуетКаталогFeatures_not_in_gitСозданныйВоВременнойПапке()"",""СуществуетКаталогFeatures_not_in_gitСозданныйВоВременнойПапке"",""и существует каталог features-not-in-git созданный во временной папке"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯВызываюКоманду(Парам01)"",""ЯВызываюКоманду"",""Когда я вызываю команду """"git blame ./spec/fixtures/TestFeatureForLog.feature"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯВижуТаблицуСтрокАвторовИДатИзменения()"",""ЯВижуТаблицуСтрокАвторовИДатИзменения"",""И я вижу таблицу строк, авторов и дат изменения"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯВижуЖурналИРазличияДляКаждогоИзменения()"",""ЯВижуЖурналИРазличияДляКаждогоИзменения"",""Тогда я вижу журнал и различия для каждого изменения"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯТочноЗнаюСколькоРазИзменялосьТребование()"",""ЯТочноЗнаюСколькоРазИзменялосьТребование"",""Тогда я точно знаю сколько раз изменялось требование"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯВижуЖурналРазличийДляКаждогоИзменения()"",""ЯВижуЖурналРазличийДляКаждогоИзменения"",""Когда я вижу журнал различий для каждого изменения"");
	ДобавитьШагВМассивТестов(ВсеТесты,""НажимаюКнопку(Парам01)"",""НажимаюКнопку"",""И нажимаю кнопку """"Перейти к версии"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВызываетсяКоманда(Парам01)"",""ВызываетсяКоманда"",""Тогда вызывается команда """"git checkout <SHA версии> ./spec/fixtures/TestFeatureForLog.feature"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""КомандаВызваннаяВКаталогеХраненияТребованийВозвращаетСтрокуССодержимым(Парам01,Парам02)"",""КомандаВызваннаяВКаталогеХраненияТребованийВозвращаетСтрокуССодержимым"",""Когда команда """"git branch"""" вызванная в каталоге хранения требований возвращает строку с содержимым """"fatal: not a git repository"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""КнопкаНЕАктивна(Парам01)"",""КнопкаНЕАктивна"",""Тогда кнопка """"Показать историю"""" НЕ активна"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
	ВременныйКаталог=КаталогВременныхФайлов()+""features-not-in-git"";
	Темп=Новый Файл(ВременныйКаталог);
	//Вызватьисключение ВременныйКаталог;
	Если Темп.Существует() Тогда
		УдалитьФайлы(ВременныйКаталог,);
	КонецЕсли;	
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////


#Область СвоиФункции

&НаКлиенте
Функция НайтиФормыТекущегоОкна() Экспорт
	ОкноПриложения         = ПолучитьАктивноеОкноИзТестовоеПриложение();
	МассивФорм             = ОкноПриложения.НайтиОбъекты(Тип(""ТестируемаяФорма""));
	Возврат МассивФорм;
КонецФункции	

&НаКлиенте
Процедура ВОткрытойФормеЯИзменяюФлагСЗаголовком(ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	//ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	//ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип(""ТестируемаяФорма""));
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкна();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени Тогда
			ПолеРеквизит = ТекущаяФорма.НайтиОбъект(Тип(""ТестируемоеПолеФормы""),, ИмяРеквизита);
		Иначе
			ПолеРеквизит = ТекущаяФорма.НайтиОбъект(Тип(""ТестируемоеПолеФормы""), ИмяРеквизита);
		КонецЕсли;	 
		
		
		Если ПолеРеквизит = Неопределено Тогда
			Продолжить;
		КонецЕсли;	 
		
		ПолеРеквизит.Активизировать();
		ПолеРеквизит.УстановитьОтметку();
		
		
		Нашли = Истина;
		Прервать;
	КонецЦикла;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			Стр = ""Флаг с именем <"" + ИмяРеквизита + ""> не найден!"";
		Иначе	
			Стр = ""Флаг с заголовоком <"" + ИмяРеквизита + ""> не найден!"";
		КонецЕсли;	 
		
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;	 

	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьАктивноеОкноИзТестовоеПриложение()
	Возврат КонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
КонецФункции	

&НаКлиенте
Функция НайтиТекущуюФорму() Экспорт
	
	Возврат Контекст.АктивноеОкно.НайтиОбъект(Тип(""ТестируемаяФорма""));
	
КонецФункции	

&НаКлиенте
Функция НайтиРеквизитФормы(ИмяРеквизита) Экспорт
	ТекущаяФорма=НайтиТекущуюФорму();
	Возврат ТекущаяФорма.НайтиОбъект(Тип(""ТестируемоеПолеФормы""),, ИмяРеквизита);
	
КонецФункции	

&НаКлиенте
Функция НайтиТЧФормы(ИмяТЧ) Экспорт
	ТекущаяФорма=НайтиТекущуюФорму();
	Возврат ТекущаяФорма.НайтиОбъект(Тип(""ТестируемаяТаблицаФормы""),,ИмяТЧ);
	
КонецФункции	

#КонецОбласти


&НаКлиентеНаСервереБезКонтекста
Функция RegRead(Путь = ""HKLM\Software\Nokia\"")
    
    Значение = Неопределено;
    
    Попытка
        WshShell = Новый COMОбъект(""WScript.Shell"");
        Значение = WshShell.RegRead(Путь);
    Исключение
    КонецПопытки;
    
    Возврат Значение;
    
КонецФункции

&НаКлиенте
//Дано в системе установлена командная строка работы с git
//@ВСистемеУстановленаКоманднаяСтрокаРаботыСGit()
Процедура ВСистемеУстановленаКоманднаяСтрокаРаботыСGit() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	
	Перем Значение; // В эту переменную запишем значение из реестра
	ЗначениеPath = RegRead(""HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment\PATH"");
	Если СтрНайти(ВРЕГ(ЗначениеPath),""GIT\CMD"")=0 Тогда
		ВызватьИсключение ""командная строка git не установлена""
	КонецЕсли;	
		
//	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//и существует каталог features проекта bdd-editor
//@СуществуетКаталогFeaturesПроектаBdd_editor()
Процедура СуществуетКаталогFeaturesПроектаBdd_editor() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ПутьКБДД=Новый Файл(""D:\Rep\vanessa-bdd-editor\features"");
	Если НЕ ПутьКБДД.Существует() Тогда
		ВызватьИсключение ""Отсутствует каталог features проекта BDD-Editor"";	
	КонецЕсли;	

	//ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//и существует каталог features-not-in-git созданный во временной папке
//@СуществуетКаталогFeatures_not_in_gitСозданныйВоВременнойПапке()
Процедура СуществуетКаталогFeatures_not_in_gitСозданныйВоВременнойПапке() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВременныйКаталог=КаталогВременныхФайлов()+""features-not-in-git"";
	Темп=Новый Файл(ВременныйКаталог);
	//Вызватьисключение ВременныйКаталог;
	Если НЕ Темп.Существует() Тогда
		СоздатьКаталог(ВременныйКаталог);
		Темп=Новый Файл(ВременныйКаталог);
		Если НЕ Темп.Существует() Тогда
			ВызватьИсключение ""Не смог создать каталог features-not-in-git во временной папке"";		
		КонецЕсли;
	КонецЕсли;	
//	ВызватьИсключение ""Не реализовано."";

КонецПроцедуры

&НаКлиенте
//Когда я вызываю команду ""git blame ./spec/fixtures/TestFeatureForLog.feature""
//@ЯВызываюКоманду(Парам01)
Процедура ЯВызываюКоманду(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВременныйКаталог=КаталогВременныхФайлов()+""features-not-in-git\"";
	ПутьКБДД=""D:\Rep\vanessa-bdd-editor\"";
	КомандаСистемы(Парам01+"" >""""""+ВременныйКаталог+""History.txt"""""",ПутьКБДД);
КонецПроцедуры

&НаКлиенте
//И я вижу таблицу строк, авторов и дат изменения
//@ЯВижуТаблицуСтрокАвторовИДатИзменения()
Процедура ЯВижуТаблицуСтрокАвторовИДатИзменения() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВременныйКаталог=КаталогВременныхФайлов()+""features-not-in-git\History.txt"";
	Темп=Новый Файл(ВременныйКаталог);
	Если НЕ Темп.Существует() Тогда
		ВызватьИсключение ""Файл с данными по автору фичи не создан."";
	Иначе	
		Если Темп.Размер()=0 Тогда
			ВызватьИсключение ""Данные по автору не получены."";
		КонецЕсли;	
	КонецЕсли;	
	
	//ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда я вижу журнал и различия для каждого изменения
//@ЯВижуЖурналИРазличияДляКаждогоИзменения()
Процедура ЯВижуЖурналИРазличияДляКаждогоИзменения() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВременныйКаталог=КаталогВременныхФайлов()+""features-not-in-git\History.txt"";
	Темп=Новый Файл(ВременныйКаталог);
	Если НЕ Темп.Существует() Тогда
		ВызватьИсключение ""Файл с данными по автору фичи не создан."";
	Иначе	
		Если Темп.Размер()=0 Тогда
			ВызватьИсключение ""Данные журнала различий не получены."";
		КонецЕсли;	
	КонецЕсли;	
//	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда я точно знаю сколько раз изменялось требование
//@ЯТочноЗнаюСколькоРазИзменялосьТребование()
Процедура ЯТочноЗнаюСколькоРазИзменялосьТребование() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВременныйКаталог=КаталогВременныхФайлов()+""features-not-in-git\History.txt"";
	Темп=Новый Файл(ВременныйКаталог);
	Если НЕ Темп.Существует() Тогда
		ВызватьИсключение ""Файл с данными по автору фичи не создан."";
	Иначе	
		Если Темп.Размер()=0 Тогда
			ВызватьИсключение ""Данные изменениям не получены."";
		КонецЕсли;	
	КонецЕсли;	
	//ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Когда я вижу журнал различий для каждого изменения
//@ЯВижуЖурналРазличийДляКаждогоИзменения()
Процедура ЯВижуЖурналРазличийДляКаждогоИзменения() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда кнопка ""Показать историю"" НЕ активна
//@КнопкаНЕАктивна(Парам01)
Процедура КнопкаНЕАктивна(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

//окончание текста модуля

&НаКлиенте
//И нажимаю кнопку ""Перейти к версии""
//@НажимаюКнопку(Парам01)
Процедура НажимаюКнопку(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда вызывается команда ""git checkout <SHA версии> ./spec/fixtures/TestFeatureForLog.feature""
//@ВызываетсяКоманда(Парам01)
Процедура ВызываетсяКоманда(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Когда команда ""git branch"" вызванная в каталоге хранения требований возвращает строку с содержимым ""fatal: not a git repository""
//@КомандаВызваннаяВКаталогеХраненияТребованийВозвращаетСтрокуССодержимым(Парам01,Парам02)
Процедура КомандаВызваннаяВКаталогеХраненияТребованийВозвращаетСтрокуССодержимым(Парам01,Парам02) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}